name: Build and Test

on:
  pull_request:
    branches:
      - main

  workflow_dispatch:

env:
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        os:
        - ubuntu-latest
        compiler: 
        - {cc: gcc, cxx: g++}
        - {cc: clang, cxx: clang++}
        mpi:
        - openmpi

        # TODO mpich with Clang is not working. Revisit
        include:
        - os: ubuntu-latest
          compiler: {cc: gcc, cxx: g++}
          mpi: mpich
        - os: macos-latest
          compiler: {cc: clang, cxx: clang++}
          mpi: openmpi
        - os: macos-latest
          compiler: {cc: clang, cxx: clang++}
          mpi: mpich
        - os: windows-latest
          compiler: {cc: cl, cxx: cl}
          mpi: intelmpi
  
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install MPI
        uses: mpi4py/setup-mpi@v1
        with:
          mpi: ${{ matrix.mpi }}

      - name: Install xmipp4-core
        id: install-xmipp4-core
        uses: ./.github/composites/install-xmipp4-core
        with:
          ref: main
      
      - name: Configure and build with CMake
        uses: threeal/cmake-action@main
        with:
          source-dir: ${{ github.workspace }}
          build-dir: "${{ github.workspace }}/build"
          c-compiler: ${{ matrix.compiler.cc }}
          cxx-compiler: ${{ matrix.compiler.cxx }}
          options: |
            CMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
            xmipp4-core_ROOT=${{ steps.install-xmipp4-core.outputs.xmipp4-core-root }}
          run-build: true
          build-args: --config ${{ env.BUILD_TYPE }}

      - name: Run tests
        working-directory: "${{ github.workspace }}/build"
        run: ctest -C ${{ env.BUILD_TYPE }} -T test --rerun-failed --output-on-failure
